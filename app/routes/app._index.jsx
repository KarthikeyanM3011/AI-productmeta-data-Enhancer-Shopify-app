import { useState } from "react";
import {
  Page,
  Layout,
  Card,
  Button,
  BlockStack,
  Box,
  List,
  Modal,
  Spinner,
} from "@shopify/polaris";
import { Link } from "@remix-run/react";
import { useNavigate } from "react-router-dom";
import { TitleBar } from "@shopify/app-bridge-react";
import loadingGif from './assets/loader.gif';
import './css/index.css';

export default function Index() {
  const navigate = useNavigate();
  const [namespace, setNamespace] = useState("cartesian");
  const [isLoading, setIsLoading] = useState(false);

  const toggleNamespace = () => {
    setNamespace(namespace === "cartesian" ? "global" : "cartesian");
  };

  const handleNavigation = (path) => {
    // Show the loading modal
    setIsLoading(true);

    // Navigate to the specified path
    navigate(path);
  };

  const metafieldCode =
    namespace === "cartesian"
      ? `
    <div class="metafields-container">  
      {% assign product_namespace = "cartesian" %}
      {% for metafield in product.metafields[product_namespace] %}
        {% if metafield[1].value != blank %}
          <p><strong>{{ metafield[0] | replace: '_', ' ' | capitalize }}:</strong> {{ metafield[1].value }}</p>
        {% endif %}
      {% endfor %}
    </div>`
      : `
    <div class="metafields-container">
    {% assign possible_namespaces = "Your namespaces separated by ', ' " | split: ", " %}
    {% for namespace in possible_namespaces %}
      {% assign metafields = product.metafields[namespace] %}
      {% if metafields %}
        {% for metafield in metafields %}
          {% if metafield[1].value != blank %}
            <p>
              <strong>{{ metafield[0] | replace: '_', ' ' | capitalize }}:</strong> {{ metafield[1].value }}
            </p>
          {% endif %}
        {% endfor %}
      {% endif %}
    {% endfor %}
  </div>`;

  return (
    <Page>
      <BlockStack gap="500">
        <Layout>
          <Layout.Section>
            <Card sectioned>
              <div className="topDivison">
                <h1>Revolutionize Your Shopify Metadata Management</h1>
                <ul>
                  <li>AI-powered tool for eCommerce metadata enhancement.</li>
                  <li>Automatically generates detailed metadata from product images.</li>
                  <li>Utilizes advanced computer vision and natural language processing (NLP).</li>
                  <li>Creates product metadata, attributes, and specifications effortlessly.</li>
                  <li>Helps businesses improve product discovery and customer engagement.</li>
                  <li>Streamlines the listing process, reducing the need for manual input.</li>
                  <li>Optimizes product pages for better online search performance.</li>
                </ul>
              </div>
              <Button
                onClick={() => handleNavigation("/app/productdetails")}
                variant="primary"
                style={{
                  backgroundColor: "white",
                  color: "black",
                  borderColor: "black",
                }}
              >
                Get Started
              </Button>
            </Card>
            <br />

            <Card title="Features" sectioned>
              <BlockStack gap="300">
                <div className="SecondDiv">
                  <h2>Generate Metadata</h2>
                  <p>
                    Select products from your store, and Majik will generate
                    metadata for you at just â‚¹1 per product. Our AI ensures the
                    most accurate and relevant metadata. Once you place the order,
                    the request is processed immediately.
                  </p>
                  <h2>Review Metadata</h2>
                  <p>
                    View and manage your metadata generation requests in real-time.
                    Apply the metadata to your products at any time from the Review
                    page. Process, review, and apply effortlessly.
                  </p>
                  <h2>Manage Product Metadata</h2>
                  <p>
                    Get an overview of all your product metadata. Use the
                    MetaProducts page to create new metafields, update existing
                    ones, or delete unwanted ones. The 'cartesian' namespace
                    ensures that metadata created here is consistent and easy to
                    manage.
                  </p>
                </div>
              </BlockStack>
            </Card>
            <br />

            <Card title="Display Metadata in Your Storefront" sectioned>
              <div className="ThirdDivision">
                <h3>
                  Use the following code to display the metafields generated by
                  Majik on your storefront:
                </h3>
                <Button onClick={toggleNamespace} variant="primary">
                  Show {namespace === "cartesian" ? "Global" : "Cartesian"} Namespace
                </Button>
                <div className="marginclass" />
                <Box
                  padding="400"
                  background="bg-surface-active"
                  borderWidth="025"
                  borderRadius="200"
                  borderColor="border"
                  overflowX="scroll"
                  marginBottom="10px"
                >
                  <pre style={{ margin: 0 }}>
                    <code>{metafieldCode}</code>
                  </pre>
                </Box>
                <p>
                  Simply paste this code into your Shopify theme to display product
                  metafields generated using Majik.
                </p>
              </div>
            </Card>
          </Layout.Section>
          <br />

          <Layout.Section secondary>
            <Card title="Why Choose Majik?" sectioned>
              <Box>
                <div>
                  <h2>AI-Powered Accuracy</h2>
                  <p>
                    Majik, powered by Plotch.ai, ensures the highest-quality
                    metadata using cutting-edge AI technology. Your store deserves
                    nothing less.
                  </p>
                </div>
              </Box>
              <Box>
                <h2>Real-Time Updates</h2>
                <p>
                  Every change you make to your metadata is reflected in real-time,
                  giving you full control over your Shopify store.
                </p>
              </Box>
              <Box>
                <h2>Affordable</h2>
                <p>
                  Generate accurate product metadata for just $1 per 10 products/month,
                  saving you both time and money.
                </p>
              </Box>
            </Card>
            <br />

            <Card title="Next Steps" sectioned>
              <List type="bullet">
                <List.Item>
                
                  
                  <p>Visit the <span className="redirectbutton" onClick={() => handleNavigation("/app/productdetails")}>View</span>  to start creating high-quality metadata.</p>
                  {/* <Button className="redirectButton" plain onClick={() => handleNavigation("/app/productdetails")}>
                    View
                  </Button>{" "} */}
                
                </List.Item>
                <List.Item>
                  <p>Track your metadata requests in real-time on the{" "}<span className="redirectbutton" onClick={() => handleNavigation("/app/review")}>View.</span></p>
                </List.Item>
                <List.Item>
                  <p>Manage and edit existing metadata from the{" "}<span className="redirectbutton" onClick={() => handleNavigation("/app/metafields")}>View</span></p>
                </List.Item>
              </List>
            </Card>
          </Layout.Section>
        </Layout>
      </BlockStack>

      {/* Loading Modal */}
      {isLoading && (
        <Modal
          open={isLoading}
          onClose={() => {}}
          title=""
          primaryAction={null}
        >
          <Modal.Section>
            <div style={{ textAlign: "center" }}>
              <Spinner size="large" />
              <p>Loading, please wait...</p>
            </div>
          </Modal.Section>
        </Modal>
      )}
    </Page>
  );
}
